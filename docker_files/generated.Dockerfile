# Generated by Neurodocker v0.3.2-7-g4b0f32d.
#
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
#     https://github.com/kaczmarj/neurodocker
#
# Timestamp: 2018-01-28 18:37:28

FROM neurodebian:stretch-non-free

ARG DEBIAN_FRONTEND=noninteractive

#----------------------------------------------------------
# Install common dependencies and create default entrypoint
#----------------------------------------------------------
ENV LANG="en_US.UTF-8" \
    LC_ALL="C.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN apt-get update -qq && apt-get install -yq --no-install-recommends  \
    	apt-utils bzip2 ca-certificates curl locales unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && localedef --force --inputfile=en_US --charmap=UTF-8 C.UTF-8 \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> $ND_ENTRYPOINT \
         && echo 'set +x' >> $ND_ENTRYPOINT \
         && echo 'if [ -z "$*" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT; \
       fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker
ENTRYPOINT ["/neurodocker/startup.sh"]

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends tree \
                                                     nano \
                                                     less \
                                                     ncdu \
                                                     tig \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

#-----------------------------------------------------------
# Install FSL v5.0.10
# FSL is non-free. If you are considering commerical use
# of this Docker image, please consult the relevant license:
# https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence
#-----------------------------------------------------------
RUN apt-get update -qq && apt-get install -yq --no-install-recommends bc dc libfontconfig1 libfreetype6 libgl1-mesa-dev libglu1-mesa-dev libgomp1 libice6 libxcursor1 libxft2 libxinerama1 libxrandr2 libxrender1 libxt6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && echo "Downloading FSL ..." \
    && curl -sSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz \
    | tar zx -C /opt \
    && /bin/bash /opt/fsl/etc/fslconf/fslpython_install.sh -q -f /opt/fsl \
    && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \
    && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \
    && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \
    && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT
ENV FSLDIR=/opt/fsl \
    PATH=/opt/fsl/bin:$PATH

# User-defined instruction
RUN curl -sL https://deb.nodesource.com/setup_6.x | bash -

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends nodejs \
                                                     build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# User-defined instruction
ENV LC_ALL=C.UTF-8

# User-defined instruction
RUN apt-get update && apt-get install -yq xvfb mesa-utils

# Create new user: neuro
RUN useradd --no-user-group --create-home --shell /bin/bash neuro
USER neuro

#------------------
# Install Miniconda
#------------------
ENV CONDA_DIR=/opt/conda \
    PATH=/opt/conda/bin:$PATH
RUN echo "Downloading Miniconda installer ..." \
    && miniconda_installer=/tmp/miniconda.sh \
    && curl -sSL --retry 5 -o $miniconda_installer https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
    && /bin/bash $miniconda_installer -b -p $CONDA_DIR \
    && rm -f $miniconda_installer \
    && conda config --system --prepend channels conda-forge \
    && conda config --system --set auto_update_conda false \
    && conda config --system --set show_channel_urls true \
    && conda clean -tipsy && sync

#-------------------------
# Create conda environment
#-------------------------
RUN conda create -y -q --name neuro --channel vida-nyu python=2.7 \
                                                       jupyter \
                                                       jupyterlab \
                                                       pandas \
                                                       matplotlib \
                                                       scikit-learn \
                                                       seaborn \
                                                       numpy \
                                                       scipy \
                                                       traitsui \
                                                       apptools \
                                                       configobj \
                                                       reprozip \
                                                       reprounzip \
                                                       vtk \
    && sync && conda clean -tipsy && sync \
    && /bin/bash -c "source activate neuro \
      && pip install -q --no-cache-dir nilearn \
                                       datalad \
                                       mayavi \
                                       pysurfer \
                                       mne" \
    && sync \
    && sed -i '$isource activate neuro' $ND_ENTRYPOINT

# User-defined instruction
RUN bash -c "source activate neuro && pip install --pre --upgrade ipywidgets pythreejs " 

# User-defined instruction
RUN bash -c "source activate neuro && pip install  --upgrade https://github.com/maartenbreddels/ipyvolume/archive/23eb91685dfcf200ee82f89ab6f7294f9214db8c.zip && jupyter nbextension install --py --sys-prefix ipyvolume && jupyter nbextension enable --py --sys-prefix ipyvolume " 

# User-defined instruction
RUN bash -c "source activate neuro && conda install jupyter_contrib_nbextensions " 

# User-defined instruction
RUN bash -c "source activate neuro && pip install --upgrade https://github.com/nipy/nibabel/archive/master.zip " 

# User-defined instruction
USER root

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends graphviz \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# User-defined instruction
USER neuro

# User-defined instruction
RUN bash -c "source activate neuro && jupyter nbextension enable --py --sys-prefix widgetsnbextension && jupyter nbextension enable --py --sys-prefix ipyvolume && conda install -yq bokeh scikit-image traits " 

# User-defined instruction
RUN bash -c "source activate neuro && pip install --upgrade https://github.com/nipy/nipype/tarball/master https://github.com/INCF/pybids/archive/master.zip nipy duecredit " 

WORKDIR /home/neuro

#--------------------------------------
# Save container specifications to JSON
#--------------------------------------
RUN echo '{ \
    \n  "pkg_manager": "apt", \
    \n  "check_urls": false, \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "neurodebian:stretch-non-free" \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "tree", \
    \n        "nano", \
    \n        "less", \
    \n        "ncdu", \
    \n        "tig" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "fsl", \
    \n      { \
    \n        "version": "5.0.10" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "RUN curl -sL https://deb.nodesource.com/setup_6.x | bash -" \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "nodejs", \
    \n        "build-essential" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "ENV LC_ALL=C.UTF-8" \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "RUN apt-get update && apt-get install -yq xvfb mesa-utils" \
    \n    ], \
    \n    [ \
    \n      "user", \
    \n      "neuro" \
    \n    ], \
    \n    [ \
    \n      "miniconda", \
    \n      { \
    \n        "env_name": "neuro", \
    \n        "conda_opts": "--channel vida-nyu", \
    \n        "conda_install": "python=2.7 jupyter jupyterlab pandas matplotlib scikit-learn seaborn numpy scipy traitsui apptools configobj reprozip reprounzip vtk", \
    \n        "pip_install": "nilearn datalad mayavi pysurfer mne", \
    \n        "activate": true \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "RUN bash -c \"source activate neuro && pip install --pre --upgrade ipywidgets pythreejs \" " \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "RUN bash -c \"source activate neuro && pip install  --upgrade https://github.com/maartenbreddels/ipyvolume/archive/23eb91685dfcf200ee82f89ab6f7294f9214db8c.zip && jupyter nbextension install --py --sys-prefix ipyvolume && jupyter nbextension enable --py --sys-prefix ipyvolume \" " \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "RUN bash -c \"source activate neuro && conda install jupyter_contrib_nbextensions \" " \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "RUN bash -c \"source activate neuro && pip install --upgrade https://github.com/nipy/nibabel/archive/master.zip \" " \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "USER root" \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "graphviz" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "USER neuro" \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "RUN bash -c \"source activate neuro && jupyter nbextension enable --py --sys-prefix widgetsnbextension && jupyter nbextension enable --py --sys-prefix ipyvolume && conda install -yq bokeh scikit-image traits \" " \
    \n    ], \
    \n    [ \
    \n      "instruction", \
    \n      "RUN bash -c \"source activate neuro && pip install --upgrade https://github.com/nipy/nipype/tarball/master https://github.com/INCF/pybids/archive/master.zip nipy duecredit \" " \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/home/neuro" \
    \n    ] \
    \n  ], \
    \n  "generation_timestamp": "2018-01-28 18:37:28", \
    \n  "neurodocker_version": "0.3.2-7-g4b0f32d" \
    \n}' > /neurodocker/neurodocker_specs.json
